version: "2.1"

services:

  zookeeper:
    image: wurstmeister/zookeeper
    hostname: zookeeper
    ports:
    - 2181:2181
    networks:
    - net

  kafka:
    image: wurstmeister/kafka
    ports:
    - 9092:9092
    depends_on:
    - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.1.7
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CREATE_TOPICS: "weblogs-text:1:1"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    hostname: kafka
    container_name: kafka-lambda
    networks:
    - net

  cassandra:
    image: 'bitnami/cassandra:latest'
    hostname: cassandra
    networks:
    - net
    ports:
    - 7000:7000


  spark-master:
    image: bde2020/spark-master:2.3.2-hadoop2.7
    container_name: spark-master
    hostname: spark-master
    healthcheck:
      interval: 5s
      retries: 100
    ports:
    - "8080:8080"
    - "7077:7077"
    environment:
    - INIT_DAEMON_STEP=false
    volumes:
      - ./data/apps:/opt/spark-apps
      - ./data/input:/opt/spark-data

  spark-worker-1:
    image: bde2020/spark-worker:2.3.2-hadoop2.7
    container_name: spark-worker
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    volumes:
      - ./data/apps:/opt/spark-apps
      - ./data/input:/opt/spark-data

networks:
  net:
    driver: bridge
